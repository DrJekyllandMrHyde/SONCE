<?xml version="1.0" standalone="yes"?>
<!--
@Author: Mitja Jež
@Mail:mitja.jez AT slap.si
@Date:21.sep.2010
@LastMod: 11.okt.2010

-->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" 
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg"
xmlns:xlink="http://www.w3.org/1999/xlink" onload="startup(evt)">
<script type="application/ecmascript"><![CDATA[
var svgns = 'http://www.w3.org/2000/svg';
var xlinkns = 'http://www.w3.org/1999/xlink';
var svgDoc=null;
var O=null;
var finalX=new Array();
var finalY=new Array();
var Root=document.documentElement;

var chosen=false;					//Is any element chosen?
var choice=1;						//ID of chosen element
var count=1;						//for ID of new element
var gridSep=10;						//Grid seperation
var snap = true;					//Snap to grid?

// ---------------------------------------------------------------------
// funkcija mora samam prebrati vsebino knjižnjice iz library/lib.xml in simbol iz library/lib.svg
var lib=new Array(
	new Array("Resistor","R"),
	new Array("Inductor","L"),
	new Array("Capacitor","C"),
	new Array("Voltage","V"),
	new Array("Current","I")
)

function startup(){
	standardize(Root);
	buildLibrary()
	grid();
}

function standardize(R){
	var Attr={
		"onclick":"chooseEl(evt)",
		"onmousemove":null,
		"onmouseover":"hilight(evt)",
		"onmouseout":"hilight(evt)"
	}
	assignAttr(R,Attr)
}


function buildLibrary(){

	var i;
	for (i in lib){
		var L=document.createElementNS(svgns,"text") 
		var Attr={
			"x":10,
			"y":i*20+50,
			"id":"t"+lib[i][1],
			"font-size":"12pt"
		}
		assignAttr(L,Attr);
		L.textContent = lib[i][0];
		Root.appendChild(L);
		L=document.createElementNS(svgns,"rect");
		var Attr={
			"x":0,
			"y":i*20+35,
			"id":lib[i][1],
			"width":"150",
			"height":"20",
			"class":"libList",
			"style":"fill:white;stroke:blue;opacity:0;",
//			"onclick":"newElement(evt)"
		}
		assignAttr(L,Attr);
		Root.appendChild(L);
	}
}

function assignAttr(O,A){
	for (i in A) O.setAttributeNS(null,i, A[i])
}

function chooseEl(evt){
//takoj ob kliku-označbi, moramo shraniti položaj kurzorja (pozicijo klika).

//	Ko označimo element, se prikažejo lastnosti izbranega elementa.
	O=evt.target
	document.getElementById("console").textContent = "";
	if(choice == O.id){
		chosen=false;
		choice="";
		document.getElementById("console").textContent = "od";
	}
	else{
		choice=O.id;
		chosen=true;
	}
	document.getElementById("console").textContent += "označen id:"+O.id+" name:"+O.nodeName+"\n ";
	for(i=0;i<lib.length;i++) if(O.id == lib[i][1]) newElement(evt,lib[i][0]);
}

function newElement(evt,type){
//	var O=evt.target
//	var type = document.getElementById("t"+O.id).textContent.toLowerCase()

	var newel=document.createElementNS(svgns,"use") 
	newel.setAttribute("id", count++);
	newel.setAttributeNS(xlinkns, "xlink:href", "library.svg#"+type.toLowerCase());
	Root.appendChild(newel);
// takoj postavimo element na položaj kurzorja
	var Attr={
		"x":evt.clientX,
		"y":evt.clientY
	}
	assignAttr(newel,Attr);
	move(newel.id);
}

function move(id){
	var O=document.getElementById(id)
	if(O.nodeName!="use")return;
	var Attr={
		"onmousemove":"slide(evt,'"+O.id+"')",
		"onclick":"standardize(Root)"
	}
	document.getElementById("console").textContent = O.id+"_";	
	assignAttr(Root,Attr);
}

function slide(evt,id){
	var o=document.getElementById(id)
	var c="";
	//snaping!!
if(snap){
	var matrix = document.getElementById("canvas").getCTM();
	matrix = matrix.inverse();
	matrix = matrix.translate(evt.clientX, evt.clientY);
	var x = Math.round(matrix.e/gridSep)*gridSep;
	var y = Math.round(matrix.f/gridSep)*gridSep;
	document.getElementById("msg").textContent = "x:"+evt.clientX+" in y:"+evt.clientY;
	o.setAttributeNS(null, c+"x", x);
	o.setAttributeNS(null, c+"y", y);
}
else{
	o.setAttributeNS(null, c+"x", evt.clientX);
	o.setAttributeNS(null, c+"y", evt.clientY);
}
	document.getElementById("msg1").textContent = "x:"+x+" in y:"+y;
	
}

function hilight(evt){
	var O=evt.target
	if (O.getAttribute("name")=="grid") return;
	if (O.getAttribute("class")=="libList"){
		var T = document.getElementById("t"+O.id)
		if (evt.type=="mouseover") T.setAttributeNS(null,"font-weight","bold");
		else T.setAttributeNS(null,"font-weight","normal");
	}
	else{
		if (evt.type=="mouseover" || evt.id == choice) O.setAttributeNS(null,"stroke-opacity",1)
		else O.setAttributeNS(null,"stroke-opacity",.7)
	}
}

function cloneRect(evt) {
	O=evt.target
	var cloneElement = O.cloneNode(false);
	var newx = 25 + Math.random() * 200;
	var newy = 70 + Math.random() * 150;
	cloneElement.setAttributeNS(null,"x",newx);
	cloneElement.setAttributeNS(null,"y",newy);
	document.getElementById("firstGroup").appendChild(cloneElement);
}


function grid(){
	var pad = document.getElementById("snapgrid");
	for(i=0;i<(window.innerWidth/gridSep);i++){
		var gridel=document.createElementNS(svgns,"use") ;
		gridel.setAttributeNS(xlinkns, "xlink:href", "#vertical-axis");
		gridel.setAttributeNS(null,"x",i*gridSep);
		pad.appendChild(gridel);
	}
	for(i=0;i<(window.innerHeight/gridSep);i++){
		var gridel=document.createElementNS(svgns,"use");
		gridel.setAttributeNS(xlinkns, "xlink:href", "#horizontal-axis");
		gridel.setAttributeNS(null,"y",i*gridSep);
		pad.appendChild(gridel);
	}
}
//]]></script>
<!-- GRID -->
<defs>
<line id="vertical-axis" x1="0" y1="0" x2="0" y2="100%" style="stroke:blue;stroke-width:0.3;"/>
<line id="horizontal-axis" x1="0" y1="0" x2="100%" y2="0" style="stroke:blue;stroke-width:0.3;"/>
<g id="snapgrid"></g>
<circle id="point-marker" cx="10" cy="10" r="0.5" style="stroke:#ff0000;stroke-width:0.1px;fill:#ff0000;opacity:0.5;" />
</defs>


<g id="g_canvas">
<rect id="canvas" x="0" y="0" height="100%" width="100%" style="fill:white;stroke:yellow;stroke-width:2;"/>
<use xlink:href="#snapgrid" name="grid" />
</g>

<g id="g_library">
<rect id="library" x="0" y="0" height="100%" width="150" style="fill:white;stroke:yellow;stroke-width:2;"/>
<text font-size="24pt" x="10" y="29" id="title">Library</text>
<rect id="library" x="0" y="0" height="36" width="150" style="fill:white;stroke:yellow;opacity:0;"/>
<text font-size="10pt" x="10" y="500" id="msg"></text>
<text font-size="10pt" x="10" y="510" id="msg1"></text>
<text font-size="10pt" x="10" y="520" id="console"></text>
</g>

</svg>

